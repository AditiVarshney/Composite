<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="013b620c-cf22-4b42-911a-8af2e2ecc4e5" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="RecordSession" searchProperties="true" timeout="0" maxResults="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="013b620c-cf22-4b42-911a-8af2e2ecc4e5fileName">RecordSession</con:setting></con:settings><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="datagen" name="autoPathGenerator" id="3bfcf99e-8160-4e6d-8072-0cc3752369df"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Script"><con:configuration><script>def workspace = context.expand('${workspaceDir}')
//return workspace
def env = testRunner.testCase.testSuite.project.activeEnvironment.name
def project = testRunner.testCase.testSuite.project.name
def RecordSessionData = context.expand( '${#Project#RecordSessionData}' )

if(RecordSessionData=='win')
{
	def path = workspace+"\\V1\\data\\"+project+"Data.xls"
	return path
}
else if(RecordSessionData=='mac')
{
   def path = workspace+"/V1/data/"+project+"Data.xls"
	return path
}
else
{
	return RecordSessionData
}</script></con:configuration><con:name>inputPath</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Script"><con:configuration><script>def workspace = context.expand('${workspaceDir}')
//return workspace
def env = testRunner.testCase.testSuite.project.activeEnvironment.name
def project = testRunner.testCase.testSuite.project.name
def RecordSessionResult = context.expand( '${#Project#RecordSessionResult}' )

if(RecordSessionResult=='win')
{
	def path = workspace+"\\Results\\"+env+"\\V1\\"+project+"\\"+project+"Result.csv"
	return path
}
else if(RecordSessionResult=='mac')
{
  def path = workspace+"/Results/"+env+"/V1/"+project+"/"+project+"Result.csv"
	return path
}
else
{
	return RecordSessionResult
}</script></con:configuration><con:name>responsePath</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Script"><con:configuration><script>def workspace = context.expand('${workspaceDir}')
def env = testRunner.testCase.testSuite.project.activeEnvironment.name
def project = testRunner.testCase.testSuite.project.name
def RecordSessionResponseTime = context.expand( '${#Project#RecordSessionResponseTime}' )

if(RecordSessionResponseTime=='win')
{
	def path = workspace+"\\ResponseTime\\"+env+"\\V1\\"+project+"\\"+project+"ResponseTime.csv"
	return path
}
else if(RecordSessionResponseTime=='mac')
{
	def path = workspace+"/ResponseTime/"+env+"/V1/"+project+"/"+project+"ResponseTime.csv"
	return path
}
else
{
	return RecordSessionResponseTime
}
</script></con:configuration><con:name>responseTimePath</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="datasink" name="ResponseTimeHeader" id="5bdba2c1-5c3d-4422-8736-f96da5d156a4"><con:settings/><con:config xsi:type="con:DataSinkStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSink type="File"><con:configuration><fileName>${autoPathGenerator#responseTimePath}</fileName><separator>,</separator><escape>"</escape><quote>true</quote><trim>true</trim><append>false</append><encoding>UTF-8</encoding></con:configuration></con:dataSink><con:properties><con:property><con:name>Generate Signature Token</con:name><con:value>Generate Signature Token</con:value></con:property><con:property><con:name>Authenticate User</con:name><con:value>Authenticate User</con:value></con:property><con:property><con:name>Generate Signature Token 2</con:name><con:value>Generate Signature Token 2</con:value></con:property><con:property><con:name>Authenticate Application</con:name><con:value>Authenticate Application</con:value></con:property><con:property><con:name>sessionSearch</con:name><con:value>sessionSearch</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datasink" name="csvHeader" id="272de17a-1056-4283-9d51-de4bfffbcadf"><con:settings/><con:config xsi:type="con:DataSinkStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSink type="File"><con:configuration><fileName>${autoPathGenerator#responsePath}</fileName><separator>,</separator><escape>"</escape><quote>true</quote><trim>true</trim><append>false</append><encoding>UTF-8</encoding></con:configuration></con:dataSink><con:properties><con:property><con:name>scenario</con:name><con:value>scenario</con:value></con:property><con:property><con:name>userName</con:name><con:value>userName</con:value></con:property><con:property><con:name>GenerateSignatureToken</con:name><con:value>GenerateSignatureToken</con:value></con:property><con:property><con:name>AuthenticateUser`</con:name><con:value>AuthenticateUser</con:value></con:property><con:property><con:name>Generate Sign Token 2 </con:name><con:value>Generate Sign Token 2 </con:value></con:property><con:property><con:name>Authenticate Application</con:name><con:value>Authenticate Application</con:value></con:property><con:property><con:name>sessionSearch</con:name><con:value>sessionSearch</con:value></con:property><con:property><con:name>expected</con:name><con:value>expected</con:value></con:property><con:property><con:name>actual</con:name><con:value>actual</con:value></con:property><con:property><con:name>Status</con:name><con:value>Status</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datasource" name="DataSource" id="1a7d680c-80c7-474c-b25a-304b79c693f4"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Excel"><con:configuration><file>${autoPathGenerator#inputPath}</file><worksheet>Sheet1</worksheet><cell>A2</cell><ignoreEmpty>false</ignoreEmpty><evaluateFormulas>false</evaluateFormulas></con:configuration></con:dataSource><con:property>Scenario</con:property><con:property>portal</con:property><con:property>username</con:property><con:property>password</con:property><con:property>orgId</con:property><con:property>recordingsOnly</con:property><con:property>sessionTypeId</con:property><con:property>programIntervalNumber</con:property><con:property>accountUsername</con:property><con:property>masterProgramId</con:property><con:property>expected</con:property><con:startRow/><con:endRow/><con:completeLastOperation>true</con:completeLastOperation><con:trimValues>false</con:trimValues><con:entitizeValues>false</con:entitizeValues><con:restartOnRun>false</con:restartOnRun><con:expandProperties>false</con:expandProperties></con:config></con:testStep><con:testStep type="groovy" name="X-For" id="f6478067-c84d-4966-8dbb-a803d7eaefde"><con:settings/><con:config><script><![CDATA[def env = testRunner.testCase.testSuite.project.activeEnvironment.name
def portal = context.expand( '${DataSource#portal}' )

if(env=="CI" && portal=="provider")
def xfor = "provider-ra-ci.zillion.com"
testRunner.testCase.getTestStepByName("Property").setPropertyValue("X-FORWARDED-FOR",xfor )
}
else if(env=="CI" && portal=="mgmt"){
def xfor = "zillionmgmt-ra-ci.zillion.com"
testRunner.testCase.getTestStepByName("Property").setPropertyValue("X-FORWARDED-FOR",xfor )
}
else if(env=="Test" && portal=="provider"){
def xfor="provider-ra-test.zillion.com"
testRunner.testCase.getTestStepByName("Property").setPropertyValue("X-FORWARDED-FOR",xfor )
}
else if(env=="Test" && portal=="mgmt"){
def xfor="zillionmgmt.myzillion.test"
testRunner.testCase.getTestStepByName("Property").setPropertyValue("X-FORWARDED-FOR",xfor )
}
else if(env=="Kulfi2" && portal=="provider")
{
def xfor="provider-ra-kulfi2.zillion.com"
testRunner.testCase.getTestStepByName("Property").setPropertyValue("X-FORWARDED-FOR",xfor )
}
else if(env=="Kulfi2" && portal=="mgmt")
{
def xfor="zillionmgmt-ra-kulfi2.zillion.com"
testRunner.testCase.getTestStepByName("Property").setPropertyValue("X-FORWARDED-FOR",xfor )
}
else if(env=="Load" && portal=="provider")
{
def xfor="provider.myrealappeal.load"
testRunner.testCase.getTestStepByName("Property").setPropertyValue("X-FORWARDED-FOR",xfor )
}
else if(env=="Load" && portal=="mgmt")
{
def xfor="zillionmgmt.myzillion.load"
testRunner.testCase.getTestStepByName("Property").setPropertyValue("X-FORWARDED-FOR",xfor )
}



]]></script></con:config></con:testStep><con:testStep type="properties" name="Property" id="49bc44e3-a0ee-4ca3-bf7e-8567b71998a0"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>SignatureToken</con:name><con:value>xCRVhtyTlEoXxMhBwOlJ5ApGtWr3YuUAhT06OF/Nl2MEiY5VhmsYxP4pCVHMIU+Q7c8PnGX94RUD8d887/QWRI1nG2D4dcaHOD2r8GOEPazYpLr6l1es2JLJs+hyqD9ADTvqvbtFvSUz1/LAar3R7MtMhkRnGinOBwMK4F2qHtA=</con:value></con:property><con:property><con:name>MemberID</con:name><con:value>07</con:value></con:property><con:property><con:name>SignatureToken2</con:name><con:value>eHljbS2RvJMKKYfayL7I2xxgD+bixsajbjlDfbZVoFK9zrE1SJSM5pFUdH1GQhZT9jrdJn+Zyn+OU1ktGzhqgitRNd2NejKADJiJ9NiHbi4GD1EiCL16RNb89ukPOfzlm18kQyMyEpd82rNSSrwFHuYLRnRJNIYi/dmdVi/2+kU=</con:value></con:property><con:property><con:name>SignatureToken3</con:name><con:value>A4xH6kuUG0Ui59fS+wVF+ttTqjbmElIbhEoEx2GMM7zA2DBxg6gWsoG7dl+C0sTwcMT+G7GGSIf3C2EwAMEMLxQSUBIDapnnsx4gadJFRVmQGI5RNlm8DDWXeDvlspsaAFU7qlf6lsbDN4lL/zskrpUQwwifsRPV5X4LHHBQuxmV895XjUFdR60jTw6Xl/w+VYJEH0DtdyzH5tRQghXzZK235BcAJ94mPy2HP8Rw00qiBKyxR4pI6kOaxeLR1OjoobHcZ34Y+rkeX3Tbvl4MHOwUtdosc1nQTEA6ddkf8KYPdQwVXejBkubsyx+W9cHTARzxNJ0c1IVAzbuxZUxnWw==</con:value></con:property><con:property><con:name>responseTime</con:name><con:value>1056</con:value></con:property><con:property><con:name>UserName</con:name><con:value>Load487@yopmail.com</con:value></con:property><con:property><con:name>Prefix</con:name><con:value>01</con:value></con:property><con:property><con:name>message</con:name><con:value>0102Load487@yopmail.comHealthfleet2015</con:value></con:property><con:property><con:name>ResponseCode</con:name><con:value>0</con:value></con:property><con:property><con:name>ProviderID</con:name><con:value>54A7411C44180AADE0530100007F299C</con:value></con:property><con:property><con:name>EventID</con:name><con:value/></con:property><con:property><con:name>PageNum</con:name><con:value>11</con:value></con:property><con:property><con:name>TodayDate</con:name><con:value>20151116</con:value></con:property><con:property><con:name>Application Name</con:name><con:value>PROGRAM ADMIN PORTAL</con:value></con:property><con:property><con:name>Role Name</con:name><con:value>PROGRAM ADMIN</con:value></con:property><con:property><con:name>AppName</con:name><con:value>LOGIN</con:value></con:property><con:property><con:name>ContentType</con:name><con:value>application/json</con:value></con:property><con:property><con:name>uniqueRequestID</con:name><con:value>01</con:value></con:property><con:property><con:name>X-FORWARDED-FOR</con:name><con:value>provider-ra-ci.zillion.com</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="TimeGen" id="2941e8fc-12da-4cc9-ae9f-4ae00ddc6176"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Script"><con:configuration><script>def UTCDate = new java.text.SimpleDateFormat("yyyy-MM-dd")
Date dNow = new Date(System.currentTimeMillis())
java.text.SimpleDateFormat UTCTime = new java.text.SimpleDateFormat ("HH:mm:ss");
UTCDate.setTimeZone(TimeZone.getTimeZone('UTC'))
UTCTime.setTimeZone(TimeZone.getTimeZone('UTC'))
def res= (UTCDate.format( new Date())).toString()+'T'+(UTCTime.format(dNow)).toString()+'Z'
return res.toString()</script></con:configuration><con:name>UTC_Time</con:name><con:mode>READ</con:mode><con:shared>true</con:shared></con:property></con:config></con:testStep><con:testStep type="datagen" name="MessageGen" id="ece7e29e-41e1-4b9a-b45f-2f662f6f70d9"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Script"><con:configuration><script>def prefix = context.expand( '${Property#Prefix}' )
def orgId = context.expand( '${DataSource#orgId}' )

def appName = context.expand( '${Property#AppName}' )

def username = context.expand( '${DataSource#username}' )
def password = context.expand( '${DataSource#password}' ) 
def message = prefix+orgId+appName+username+password
return message</script></con:configuration><con:name>MessageGen</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="Generate Signature Token" id="4af4c5ad-c1d7-428d-97c2-0a939ccf081b"><con:settings/><con:config service="GST" resourcePath="/api/generateSignatureToken" methodName="GST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Generate Signature Token" id="cbee2c2c-f9a3-45a9-a704-cd58b2cef95e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${DataSource#tokenEndPoints}</con:endpoint><con:request>{
   "organizationId": "${DataSource#orgId}",
   "applicationName": "${Property#AppName}",
   "message": "${MessageGen#MessageGen}"
}</con:request><con:originalUri>https://provider.myrealappeal.test/api/generateSignatureToken</con:originalUri><con:assertion type="JsonPath Match" id="710700de-b4c9-4931-9e46-52fa447f6bd1" name="JsonPath Match"><con:configuration><path>$.ResponseStatus</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="organizationID" value="${DataSource#orgId}"/>
  <con:entry key="applicationName" value="${Property#AppName}"/>
  <con:entry key="Content-Type" value="${Property#ContentType}"/>
</con:parameters><con:parameterOrder><con:entry>applicationName</con:entry><con:entry>Content-Type</con:entry><con:entry>organizationID</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="3eadd3a8-498b-4021-b8c6-2b1fdb581fd1"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1" id="1ed623f2-b35d-40f8-a3ff-5224b4b27917"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>data</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Generate Signature Token</con:sourceStep><con:sourcePath>$.ResponseData</con:sourcePath><con:targetType>SignatureToken</con:targetType><con:targetStep>Property</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Authenticate User" id="58273069-22bb-43f3-bec4-9d8dcc2921d6"><con:settings/><con:config service="http://uatperfapi.healthfleet.com" resourcePath="/auth/v1/authenticateuser" methodName="Authenticate User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Authenticate User" id="9863ed5b-f9d7-4a2a-84fe-72736c845241" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${DataSource#environment}</con:endpoint><con:request>{
   "username": "${DataSource#username}",
   "password": "${DataSource#password}",
   "timeOfRequestInUTC": "${TimeGen#UTC_Time}"
}
</con:request><con:originalUri>http://uatperfapi.healthfleet.com/</con:originalUri><con:assertion type="JsonPath Match" id="ac408c4e-5e4f-49ae-b77b-3a3f9e629ea5" name="Authenticate User"><con:configuration><path>$.ResponseCode</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="organizationID" value="${DataSource#orgId}"/>
  <con:entry key="authorizedSignatureToken" value="${Property#SignatureToken}"/>
  <con:entry key="X-FORWARDED-FOR" value="${Property#X-FORWARDED-FOR}"/>
  <con:entry key="UniqueRequestID" value="${Property#uniqueRequestID}"/>
  <con:entry key="applicationName" value="${Property#AppName}"/>
  <con:entry key="Content-Type" value="${Property#ContentType}"/>
</con:parameters><con:parameterOrder><con:entry>applicationName</con:entry><con:entry>Content-Type</con:entry><con:entry>organizationID</con:entry><con:entry>authorizedSignatureToken</con:entry><con:entry>UniqueRequestID</con:entry><con:entry/></con:parameterOrder><con:environmentSpec><con:entry environmentId="3eadd3a8-498b-4021-b8c6-2b1fdb581fd1"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer App Name" id="69f3538e-ce5b-4762-a3e7-9c449d2553bf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AppName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Authenticate User</con:sourceStep><con:sourcePath>$.ResponseData.userRolesList[0].applicationsList[0]</con:sourcePath><con:targetType>Application Name</con:targetType><con:targetStep>Property</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Role Name</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Authenticate User</con:sourceStep><con:sourcePath>$.ResponseData.userRolesList[0].roleName</con:sourcePath><con:targetType>Role Name</con:targetType><con:targetStep>Property</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>providerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Authenticate User</con:sourceStep><con:sourcePath>$.ResponseData.userId</con:sourcePath><con:targetType>ProviderID</con:targetType><con:targetStep>Property</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="datagen" name="MessageGen 2" id="2d2179ff-950b-4303-9a32-a6d61ac30d5c"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Script"><con:configuration><script>def prefix = context.expand( '${Property#Prefix}' )
def orgId = context.expand( '${DataSource#orgId}' )

def applicationName = context.expand( '${Property#Application Name}' )
def roleName = context.expand( '${Property#Role Name}' )
def providerID = context.expand( '${Property#ProviderID}' )
message1 = prefix+orgId+applicationName+roleName+providerID
return message1</script></con:configuration><con:name>MessageGen</con:name><con:mode>STEP</con:mode><con:shared>true</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="Generate Signature Token 2" id="24f35695-04f9-4055-9153-742024ae4185"><con:settings/><con:config service="GST" resourcePath="/api/generateSignatureToken" methodName="GST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Generate Signature Token 2" id="cbee2c2c-f9a3-45a9-a704-cd58b2cef95e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${DataSource#tokenEndPoints}</con:endpoint><con:request>{
   "organizationId": "${DataSource#orgId}",
   "applicationName": "${Property#Application Name}",
   "message": "${MessageGen 2#MessageGen}"
}</con:request><con:originalUri>https://provider.myrealappeal.test/api/generateSignatureToken</con:originalUri><con:assertion type="JsonPath Match" id="404cbdf8-d88a-4584-b822-ce8b4f5ad7da" name="JsonPath Match"><con:configuration><path>$.ResponseStatus</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="organizationID" value="${DataSource#orgId}"/>
  <con:entry key="applicationName" value="${Property#Application Name}"/>
  <con:entry key="Content-Type" value="${Property#ContentType}"/>
</con:parameters><con:parameterOrder><con:entry>applicationName</con:entry><con:entry>Content-Type</con:entry><con:entry>organizationID</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="3eadd3a8-498b-4021-b8c6-2b1fdb581fd1"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2" id="5358df47-3dc9-4b93-a899-b0a67cbd907c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SignatureToken</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Generate Signature Token 2</con:sourceStep><con:sourcePath>$.ResponseData</con:sourcePath><con:targetType>SignatureToken2</con:targetType><con:targetStep>Property</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Authenticate Application" id="10fc7d0c-8c70-462f-9638-bac641853ef4"><con:settings/><con:config service="http://uatperfapi.healthfleet.com" resourcePath="/auth/v1/authenticateapplication" methodName="Generate Signature Token - Authenticate Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Authenticate Application" id="9863ed5b-f9d7-4a2a-84fe-72736c845241" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${DataSource#environment}</con:endpoint><con:request>{
	"timeOfRequestInUTC": "${TimeGen#UTC_Time}"
	}</con:request><con:originalUri>http://uatapi.healthfleet.com/auth/v1/authenticateapplication</con:originalUri><con:assertion type="JsonPath Match" id="25d6a86f-1e8d-45b9-911b-e801d6cdec0e" name="Authenticate App"><con:configuration><path>$.ResponseCode</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="organizationID" value="${DataSource#orgId}"/>
  <con:entry key="uniqueRequestId" value="${Property#uniqueRequestID}"/>
  <con:entry key="authorizedSignatureToken" value="${Property#SignatureToken2}"/>
  <con:entry key="X-FORWARDED-FOR" value="${Property#X-FORWARDED-FOR}"/>
  <con:entry key="authorizedUserID" value="${Authenticate User#Response#$.ResponseData.userId}"/>
  <con:entry key="TimeinUTC" value="${TimeGen#UTC_Time}"/>
  <con:entry key="applicationName" value="${Property#Application Name}"/>
  <con:entry key="Content-Type" value="${Property#ContentType}"/>
</con:parameters><con:parameterOrder><con:entry>applicationName</con:entry><con:entry>Content-Type</con:entry><con:entry>organizationID</con:entry><con:entry>uniqueRequestId</con:entry><con:entry>authorizedSignatureToken</con:entry><con:entry>TimeinUTC</con:entry><con:entry>authorizedUserID</con:entry><con:entry>authorizedUserName</con:entry><con:entry>X-FORWARDED-FOR</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="3eadd3a8-498b-4021-b8c6-2b1fdb581fd1"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="sessionSearch" id="28571bd6-a22d-487f-ad99-328b284c2ebe"><con:settings/><con:config service="http://uatperfapi.healthfleet.com" resourcePath="/{portal}/v1/sessions/search" methodName="sessionSearch" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="sessionSearch" id="3f516418-447f-43ea-ba07-7181b916f281" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://raloadapi.zillion.com</con:endpoint><con:request/><con:originalUri>https://testapi.zillion.com/provider/v1/sessions/search</con:originalUri><con:assertion type="JsonPath Match" id="812282bb-1e53-42a0-a074-eca62d9c363e" name="JsonPath Match"><con:configuration><path>$['ResponseStatus']</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="timeInUTC" value="${TimeGen#UTC_Time}"/>
  <con:entry key="endDate" value="2017-07-19T18:29:59.000Z"/>
  <con:entry key="programIntervalNumber" value="${DataSource#programIntervalNumber}"/>
  <con:entry key="recordingsOnly" value="${DataSource#recordingsOnly}"/>
  <con:entry key="sessionTypeId" value="${DataSource#sessionTypeId}"/>
  <con:entry key="uniqueRequestId" value="${Property#uniqueRequestID}"/>
  <con:entry key="organizationID" value="${DataSource#orgId}"/>
  <con:entry key="authorizedSignatureToken" value="${Property#SignatureToken2}"/>
  <con:entry key="masterProgramId " value="${DataSource#masterProgramId}"/>
  <con:entry key="X-FORWARDED-FOR" value="${Property#X-FORWARDED-FOR}"/>
  <con:entry key="authorizedUserID" value="${Authenticate User#Response#$['ResponseData']['userId']}"/>
  <con:entry key="accountUsername " value="${DataSource#accountUsername}"/>
  <con:entry key="portal" value="${DataSource#portal}"/>
  <con:entry key="startDate" value="2017-07-11T18:30:00.000Z"/>
  <con:entry key="applicationName" value="${Property#Application Name}"/>
  <con:entry key="Content-Type" value="${Property#ContentType}"/>
</con:parameters><con:parameterOrder><con:entry>applicationName</con:entry><con:entry>Content-Type</con:entry><con:entry>organizationID</con:entry><con:entry>uniqueRequestId</con:entry><con:entry>authorizedSignatureToken</con:entry><con:entry>timeInUTC</con:entry><con:entry>authorizedUserID</con:entry><con:entry>X-FORWARDED-FOR</con:entry><con:entry>startDate</con:entry><con:entry>endDate</con:entry><con:entry>recordingsOnly</con:entry><con:entry>programIntervalNumber</con:entry><con:entry>sessionTypeId</con:entry><con:entry>accountUsername </con:entry><con:entry>masterProgramId </con:entry><con:entry>portal</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="3eadd3a8-498b-4021-b8c6-2b1fdb581fd1"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="datagen" name="status" id="97909524-2a6f-47eb-aefc-3188af2fdf02"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Script"><con:configuration><script><![CDATA[def response1 = context.expand( '${Generate Signature Token#Response#$.ResponseStatus}' )
def response2 = context.expand( '${Authenticate User#Response#$.ResponseStatus}' )
def response3 = context.expand( '${Generate Signature Token 2#Response#$.ResponseStatus}' )
def response4 = context.expand( '${Authenticate Application#Response#$.ResponseStatus}' )
def response5 = context.expand( '${sessionSearch#Response#$.ResponseStatus}' )

if ((response1 =="OK") && (response2 =="OK") &&	(response3 =="OK") &&	(response4 =="OK")&&	(response5 =="OK")) 
{
	def res ="Passed";
	return res.toString();
}

else

{
	def res ="Failed";
	return res.toString();
}


]]></script></con:configuration><con:name>actual</con:name><con:mode>READ</con:mode><con:shared>false</con:shared></con:property><con:property type="Script"><con:configuration><script>def expected = context.expand( '${DataSource#expected}' )
def actual = context.expand( '${status#actual}' )

if (expected==actual)
{ 
def status = "Passed"
return status.toString();
}
else{
status = "Failed"
return status.toString();
}
</script></con:configuration><con:name>status</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="datasink" name="Collect Data" id="6ee3a379-ba35-4c9a-a021-c4145b95f78c"><con:settings/><con:config xsi:type="con:DataSinkStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSink type="File"><con:configuration><fileName>${autoPathGenerator#responsePath}</fileName><separator>,</separator><escape>"</escape><quote>true</quote><trim>true</trim><append>true</append><encoding>UTF-8</encoding></con:configuration></con:dataSink><con:properties><con:property><con:name>Scenario</con:name><con:value>${DataSource#Scenario}</con:value></con:property><con:property><con:name>UserNAme</con:name><con:value>${DataSource#username}</con:value></con:property><con:property><con:name>GenerateSignatureToken</con:name><con:value>${Generate Signature Token#Response#$.ResponseStatus}</con:value></con:property><con:property><con:name>AuthenticateUser</con:name><con:value>${Authenticate User#Response#$.ResponseStatus}</con:value></con:property><con:property><con:name>Generate Sign Token 2 </con:name><con:value>${Generate Signature Token 2#Response#$.ResponseStatus}</con:value></con:property><con:property><con:name>Authenticate Application</con:name><con:value>${Authenticate Application#Response#$.ResponseStatus}</con:value></con:property><con:property><con:name>sessionSearch</con:name><con:value>${sessionSearch#Response#$.ResponseStatus}</con:value></con:property><con:property><con:name>expected</con:name><con:value>${DataSource#expected}</con:value></con:property><con:property><con:name>actual</con:name><con:value>${status#actual}</con:value></con:property><con:property><con:name>status</con:name><con:value>${status#status}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datasink" name="ResponseTime" id="5bbeff54-60b5-48b6-99fb-bff83915f9cf"><con:settings/><con:config xsi:type="con:DataSinkStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSink type="File"><con:configuration><fileName>${autoPathGenerator#responseTimePath}</fileName><separator>,</separator><escape>"</escape><quote>true</quote><trim>true</trim><append>true</append><encoding>UTF-8</encoding></con:configuration></con:dataSink><con:properties><con:property><con:name>Generate Signature Token</con:name><con:value>${=testRunner.testCase.testSteps["Generate Signature Token"].testRequest.response.timeTaken}</con:value></con:property><con:property><con:name>Authenticate User</con:name><con:value>${=testRunner.testCase.testSteps["Authenticate User"].testRequest.response.timeTaken}</con:value></con:property><con:property><con:name>Generate Signature Token 2</con:name><con:value>${=testRunner.testCase.testSteps["Generate Signature Token 2"].testRequest.response.timeTaken}</con:value></con:property><con:property><con:name>Authenticate Application</con:name><con:value>${=testRunner.testCase.testSteps["Authenticate Application"].testRequest.response.timeTaken}</con:value></con:property><con:property><con:name>sessionSearch</con:name><con:value>${=testRunner.testCase.testSteps["sessionSearch"].testRequest.response.timeTaken}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datasourceloop" name="Data Loop" id="5359570c-bdfc-4eb5-b079-613336334dd8"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>TimeGen</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>2941e8fc-12da-4cc9-ae9f-4ae00ddc6176</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1ed623f2-b35d-40f8-a3ff-5224b4b27917</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5358df47-3dc9-4b93-a899-b0a67cbd907c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1a7d680c-80c7-474c-b25a-304b79c693f4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>69f3538e-ce5b-4762-a3e7-9c449d2553bf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5359570c-bdfc-4eb5-b079-613336334dd8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ece7e29e-41e1-4b9a-b45f-2f662f6f70d9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d2179ff-950b-4303-9a32-a6d61ac30d5c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>49bc44e3-a0ee-4ca3-bf7e-8567b71998a0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58273069-22bb-43f3-bec4-9d8dcc2921d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6ee3a379-ba35-4c9a-a021-c4145b95f78c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>272de17a-1056-4283-9d51-de4bfffbcadf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>28571bd6-a22d-487f-ad99-328b284c2ebe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3bfcf99e-8160-4e6d-8072-0cc3752369df</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f6478067-c84d-4966-8dbb-a803d7eaefde</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:environmentSpec><con:entry environmentId="3eadd3a8-498b-4021-b8c6-2b1fdb581fd1"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:testCase>
